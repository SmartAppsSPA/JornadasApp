{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcelo\\\\Documents\\\\GitHub\\\\JornadasApp\\\\src\\\\Screens\\\\Dashboard\\\\MisTalonarios\\\\Talonarios.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport usePreference from \"../../../Hooks/usePreferences\";\nimport firebase from \"../../../../Firebase/Firebase\";\nimport Header from \"../../../components/Layouts/Header\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nexport default function Alcancias() {\n  var navigation = useNavigation();\n\n  var _usePreference = usePreference(),\n      userFbData = _usePreference.userFbData;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      talonarios = _useState2[0],\n      setTalonarios = _useState2[1];\n\n  var talonariosToArray = [];\n  useEffect(function () {\n    firebase.database().ref(\"Users/\" + userFbData.uid + \"/talonarios\").on(\"value\", function (snapshot) {\n      setTalonarios(snapshot.val());\n    });\n  }, []);\n\n  if (talonarios && userFbData) {\n    Object.keys(talonarios).forEach(function (key, i) {\n      talonariosToArray[i] = talonarios[key];\n    });\n    console.log(talonariosToArray);\n    return React.createElement(View, {\n      style: styles.mainView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(Header, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.infoTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Mis talonarios\"), React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, talonariosToArray.map(function (talonario, i) {\n      return React.createElement(View, {\n        key: i,\n        style: styles.infoView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.textBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, \"Numero De talonario:\"), React.createElement(Text, {\n        style: styles.textValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, talonario.talonario_numero)), React.createElement(View, {\n        style: styles.textBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, \"Correlativo:\"), React.createElement(Text, {\n        style: styles.textValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, talonario.correlativo)), talonario.asignado_tercero === true || talonario.asignado_externo === true ? React.createElement(View, {\n        style: styles.textBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.textKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Retirado: \"), talonario.recuperado === true ? React.createElement(Text, {\n        style: [styles.textValue, {\n          color: \"green\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, \"Si\") : React.createElement(Text, {\n        style: [styles.textValue, {\n          color: \"red\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, \"No\"), React.createElement(Text, {\n        style: styles.textKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \"Entregado: \"), React.createElement(Text, {\n        style: [styles.textValue, {\n          color: \"green\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"si\")) : React.createElement(View, {\n        style: styles.textBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.textKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Entregado: \"), React.createElement(Text, {\n        style: [styles.textValue, {\n          color: \"red\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"No\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"InformacionTalonario\", {\n            content: talonario,\n            uid: userFbData.uid,\n            key: i,\n            subtipo: userFbData.subtipo\n          });\n        },\n        key: i,\n        style: styles.backButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, talonario.asignado_tercero === true || talonario.asignado_externo === true ? React.createElement(Icon, {\n        type: \"FontAwesome5\",\n        name: talonario.recuperado === true ? \"check-circle\" : \"user\",\n        size: 50,\n        color: talonario.recuperado === true ? \"green\" : \"#34495E\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }) : React.createElement(Icon, {\n        type: \"FontAwesome5\",\n        name: \"question-circle\",\n        size: 50,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      })));\n    })), React.createElement(View, {\n      style: styles.backContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Home\");\n      },\n      style: styles.backButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      type: \"FontAwesome5\",\n      name: \"home\",\n      size: 35,\n      color: \"#34495E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return React.createElement(SafeAreaView, {\n      style: styles.mainView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.infoTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"Mis talonarios\"), React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        color: \"#03255F\",\n        fontSize: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"No tiene Talonarios asignados.\"))));\n  }\n}\nvar styles = StyleSheet.create({\n  scrollView: {\n    marginVertical: 20\n  },\n  backContainer: {\n    flex: 1,\n    marginLeft: 10\n  },\n  backButton: {\n    flexDirection: \"row\",\n    width: 55,\n    height: 55,\n    alignSelf: \"flex-start\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    marginTop: 15,\n    marginLeft: 20,\n    position: \"absolute\"\n  },\n  infoTitle: {\n    marginVertical: 10,\n    marginHorizontal: 10,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    fontSize: 20,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#34495E\",\n    height: 30,\n    borderRadius: 15,\n    overflow: \"hidden\"\n  },\n  infoView: {\n    paddingVertical: 10,\n    marginVertical: 10,\n    marginHorizontal: 26,\n    backgroundColor: \"#fff\",\n    borderWidth: 0.05,\n    borderRadius: 5\n  },\n  textBox: {\n    flexDirection: \"row\"\n  },\n  textKey: {\n    flex: 1,\n    marginLeft: 3,\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"#03255f\"\n  },\n  textValue: {\n    fontSize: 15,\n    fontWeight: \"700\",\n    color: \"#696969\",\n    marginRight: 70\n  },\n  backButton: {\n    flexDirection: \"row\",\n    width: 55,\n    height: 55,\n    alignSelf: \"flex-end\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    marginTop: 15,\n    marginLeft: 20,\n    position: \"absolute\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Marcelo/Documents/GitHub/JornadasApp/src/Screens/Dashboard/MisTalonarios/Talonarios.js"],"names":["React","useState","useEffect","usePreference","firebase","Header","useNavigation","Icon","ScrollView","Alcancias","navigation","userFbData","talonarios","setTalonarios","talonariosToArray","database","ref","uid","on","snapshot","val","Object","keys","forEach","key","i","console","log","styles","mainView","flex","infoTitle","map","talonario","infoView","textBox","textKey","textValue","talonario_numero","correlativo","asignado_tercero","asignado_externo","recuperado","color","navigate","content","subtipo","backButton","backContainer","alignItems","marginTop","fontWeight","fontSize","StyleSheet","create","scrollView","marginVertical","marginLeft","flexDirection","width","height","alignSelf","justifyContent","borderRadius","position","marginHorizontal","textAlign","backgroundColor","overflow","paddingVertical","borderWidth","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport usePreference from \"../../../Hooks/usePreferences\";\r\nimport firebase from \"../../../../Firebase/Firebase\";\r\nimport Header from \"../../../components/Layouts/Header\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nexport default function Alcancias() {\r\n  const navigation = useNavigation();\r\n  const { userFbData } = usePreference();\r\n  const [talonarios, setTalonarios] = useState([]);\r\n  let talonariosToArray = [];\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(`Users/${userFbData.uid}/talonarios`)\r\n      .on(\"value\", (snapshot) => {\r\n        setTalonarios(snapshot.val());\r\n      });\r\n  }, []);\r\n\r\n  if (talonarios && userFbData) {\r\n    Object.keys(talonarios).forEach((key, i) => {\r\n      talonariosToArray[i] = talonarios[key];\r\n    });\r\n    console.log(talonariosToArray);\r\n    return (\r\n      <View style={styles.mainView}>\r\n        <Header style={{flex: 1}} />\r\n        <Text style={styles.infoTitle}>Mis talonarios</Text>\r\n        <ScrollView>\r\n          {talonariosToArray.map((talonario, i) => {\r\n            return (\r\n              <View key={i} style={styles.infoView}>\r\n                <View style={styles.textBox}>\r\n                  <Text style={styles.textKey}>Numero De talonario:</Text>\r\n                  <Text style={styles.textValue}>\r\n                    {talonario.talonario_numero}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.textBox}>\r\n                  <Text style={styles.textKey}>Correlativo:</Text>\r\n                  <Text style={styles.textValue}>{talonario.correlativo}</Text>\r\n                </View>\r\n                {talonario.asignado_tercero === true ||\r\n                talonario.asignado_externo === true ? (\r\n                  <View style={styles.textBox}>\r\n                    <Text style={styles.textKey}>Retirado: </Text>\r\n                    {talonario.recuperado === true ? (\r\n                      <Text style={[styles.textValue, { color: \"green\" }]}>\r\n                        Si\r\n                      </Text>\r\n                    ) : (\r\n                      <Text style={[styles.textValue, { color: \"red\" }]}>\r\n                        No\r\n                      </Text>\r\n                    )}\r\n                    <Text style={styles.textKey}>Entregado: </Text>\r\n                    <Text style={[styles.textValue, { color: \"green\" }]}>\r\n                      si\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <View style={styles.textBox}>\r\n                    <Text style={styles.textKey}>Entregado: </Text>\r\n                    <Text style={[styles.textValue, { color: \"red\" }]}>No</Text>\r\n                  </View>\r\n                )}\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    navigation.navigate(\"InformacionTalonario\", {\r\n                      content: talonario,\r\n                      uid: userFbData.uid,\r\n                      key: i,\r\n                      subtipo: userFbData.subtipo,\r\n                    })\r\n                  }\r\n                  key={i}\r\n                  style={styles.backButton}\r\n                >\r\n                  {talonario.asignado_tercero === true ||\r\n                  talonario.asignado_externo === true ? (\r\n                    <Icon\r\n                      type=\"FontAwesome5\"\r\n                      name={\r\n                        talonario.recuperado === true ? \"check-circle\" : \"user\"\r\n                      }\r\n                      size={50}\r\n                      color={\r\n                        talonario.recuperado === true ? \"green\" : \"#34495E\"\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <Icon\r\n                      type=\"FontAwesome5\"\r\n                      name=\"question-circle\"\r\n                      size={50}\r\n                      color=\"red\"\r\n                    />\r\n                  )}\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n        <View style={styles.backContainer}>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"Home\")}\r\n            style={styles.backButton}\r\n          >\r\n            <Icon type=\"FontAwesome5\" name=\"home\" size={35} color=\"#34495E\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <SafeAreaView style={styles.mainView}>\r\n        <Header />\r\n        <Text style={styles.infoTitle}>Mis talonarios</Text>\r\n        <ScrollView>\r\n          <View style={{ alignItems: \"center\", marginTop: 30 }}>\r\n            <Text\r\n              style={{ fontWeight: \"bold\", color: \"#03255F\", fontSize: 15 }}\r\n            >\r\n              No tiene Talonarios asignados.\r\n            </Text>\r\n          </View>\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    marginVertical: 20,\r\n  },\r\n  backContainer: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    width: 55,\r\n    height: 55,\r\n    alignSelf: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n    marginTop: 15,\r\n    marginLeft: 20,\r\n    position: \"absolute\",\r\n  },\r\n  infoTitle: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#34495E\",\r\n    height: 30,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n  },\r\n  infoView: {\r\n    paddingVertical: 10,\r\n    marginVertical: 10,\r\n    marginHorizontal: 26,\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 0.05,\r\n    borderRadius: 5,\r\n  },\r\n  textBox: { flexDirection: \"row\" },\r\n  textKey: {\r\n    flex: 1,\r\n    marginLeft: 3,\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    color: \"#03255f\",\r\n  },\r\n  textValue: {\r\n    fontSize: 15,\r\n    fontWeight: \"700\",\r\n    color: \"#696969\",\r\n    marginRight: 70,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    width: 55,\r\n    height: 55,\r\n    alignSelf: \"flex-end\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n    marginTop: 15,\r\n    marginLeft: 20,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}