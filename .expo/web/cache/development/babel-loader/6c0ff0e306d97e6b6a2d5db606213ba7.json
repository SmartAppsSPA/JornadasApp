{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jahma\\\\OneDrive\\\\Documents\\\\GitHub\\\\JornadasApp\\\\src\\\\MyStackScreen\\\\PrincipalScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { validateEmail } from \"./validation\";\nimport firebase from \"../../Firebase/Firebase\";\nimport styles from \"./Style\";\nimport Logo from \"./Logo\";\n\nvar PrincipalScreen = function PrincipalScreen(props) {\n  var _useState = useState(defaultValue()),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formError = _useState4[0],\n      setFormError = _useState4[1];\n\n  var login = function login() {\n    var errors = {};\n\n    if (!formData.email || !formData.password) {\n      if (!formData.email) errors.email = true;\n      if (!formData.password) errors.password = true;\n      console.log(\"ERROR 1\");\n    } else if (!validateEmail(formData.email)) {\n      errors.email = true;\n      console.log(\"ERROR 2\");\n    } else {\n      firebase.auth().signInWithEmailAndPassword(formData.email, formData.password).then(function () {\n        console.log(\"OK\");\n      }).catch(function () {\n        setFormError({\n          email: true,\n          password: true\n        });\n      });\n    }\n\n    setFormError(errors);\n  };\n\n  var _onChange = function onChange(e, type) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, type, e.nativeEvent.text)));\n  };\n\n  function defaultValue() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  return React.createElement(View, {\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.input, formError.email && styles.error],\n    placeholder: \"Correo Electronico\",\n    placeholderTextColor: \"#969696\",\n    onChange: function onChange(e) {\n      return _onChange(e, \"email\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.input, formError.password && styles.error],\n    placeholder: \"Contrase\\xF1a\",\n    placeholderTextColor: \"#969696\",\n    secureTextEntry: true,\n    onChange: function onChange(e) {\n      return _onChange(e, \"password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: login,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Iniciar Sesi\\xF3n\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Register\");\n    },\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Registrarse\")), React.createElement(Text, {\n    style: styles.smartApps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"\\xA92020 Powered by Smartapps\"));\n};\n\nexport default PrincipalScreen;","map":{"version":3,"sources":["C:/Users/jahma/OneDrive/Documents/GitHub/JornadasApp/src/MyStackScreen/PrincipalScreen.js"],"names":["React","useState","validateEmail","firebase","styles","Logo","PrincipalScreen","props","defaultValue","formData","setFormData","formError","setFormError","login","errors","email","password","console","log","auth","signInWithEmailAndPassword","then","catch","onChange","e","type","nativeEvent","text","background","input","error","button","navigation","navigate","smartApps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextInput, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { validateEmail } from \"./validation\";\r\nimport firebase from \"../../Firebase/Firebase\";\r\nimport styles from \"./Style\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst PrincipalScreen = (props) => {\r\n  const [formData, setFormData] = useState(defaultValue());\r\n  const [formError, setFormError] = useState({});\r\n\r\n  const login = () => {\r\n    let errors = {};\r\n    if (!formData.email || !formData.password) {\r\n      if (!formData.email) errors.email = true;\r\n      if (!formData.password) errors.password = true;\r\n      console.log(\"ERROR 1\");\r\n    } else if (!validateEmail(formData.email)) {\r\n      errors.email = true;\r\n      console.log(\"ERROR 2\");\r\n    } else {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(formData.email, formData.password)\r\n        .then(() => {\r\n          console.log(\"OK\");\r\n        })\r\n        .catch(() => {\r\n          setFormError({\r\n            email: true,\r\n            password: true,\r\n          });\r\n        });\r\n    }\r\n    setFormError(errors);\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    setFormData({ ...formData, [type]: e.nativeEvent.text });\r\n  };\r\n\r\n  function defaultValue() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <View style={styles.background}>\r\n      <Logo />\r\n      <TextInput\r\n        style={[styles.input, formError.email && styles.error]}\r\n        placeholder=\"Correo Electronico\"\r\n        placeholderTextColor=\"#969696\"\r\n        onChange={(e) => onChange(e, \"email\")}\r\n      />\r\n      <TextInput\r\n        style={[styles.input, formError.password && styles.error]}\r\n        placeholder=\"Contraseña\"\r\n        placeholderTextColor=\"#969696\"\r\n        secureTextEntry={true}\r\n        onChange={(e) => onChange(e, \"password\")}\r\n      />\r\n      <TouchableOpacity onPress={login} style={styles.button}>\r\n        <Text style={styles.text}>Iniciar Sesión</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={() => props.navigation.navigate(\"Register\")}\r\n        style={styles.button}\r\n      >\r\n        <Text style={styles.text}>Registrarse</Text>\r\n      </TouchableOpacity>\r\n      <Text style={styles.smartApps}>©2020 Powered by Smartapps</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PrincipalScreen;\r\n"]},"metadata":{},"sourceType":"module"}