{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jahma\\\\OneDrive\\\\Documents\\\\GitHub\\\\JornadasApp\\\\App.js\";\nimport \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./Firebase/Firebase\";\nimport MyDrawer from \"./src/MyDrawer/index\";\nimport MyStack from \"./src/MyStack/index\";\n\nvar App = function App() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    firebase.auth().onAuthStateChanged(function (response) {\n      setUser(response);\n    });\n    return setUser(undefined);\n  }, []);\n  if (user === undefined) return null;\n  console.log(user);\n  return React.createElement(React.Fragment, null, user ? React.createElement(MyDrawer, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }) : React.createElement(MyStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jahma/OneDrive/Documents/GitHub/JornadasApp/App.js"],"names":["React","useState","useEffect","firebase","MyDrawer","MyStack","App","undefined","user","setUser","auth","onAuthStateChanged","response","console","log"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACQL,QAAQ,CAACM,SAAD,CADhB;AAAA;AAAA,MACTC,IADS;AAAA,MACHC,OADG;;AAGhBP,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,QAAD,EAAc;AAC/CH,MAAAA,OAAO,CAACG,QAAD,CAAP;AACD,KAFD;AAGA,WAAOH,OAAO,CAACF,SAAD,CAAd;AACD,GALQ,EAKN,EALM,CAAT;AAOA,MAAIC,IAAI,KAAKD,SAAb,EAAwB,OAAO,IAAP;AACxBM,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,SACE,0CACGA,IAAI,GACH,oBAAC,QAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASD,CAtBD;;AAwBA,eAAeF,GAAf","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport firebase from \"./Firebase/Firebase\";\r\nimport MyDrawer from './src/MyDrawer/index';\r\nimport MyStack from './src/MyStack/index';\r\n\r\n\r\nconst App = () => {  \r\n  const [user, setUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((response) => {\r\n      setUser(response);\r\n    });\r\n    return setUser(undefined)\r\n  }, []);\r\n\r\n  if (user === undefined) return null;\r\n  console.log(user);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <MyDrawer  user={user}/>\r\n      ) : (\r\n        <MyStack />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n  //const [state, setState] = useState(undefined);\r\n\r\n  // const AuthConfirmation = () => {\r\n  //   firebase.auth().onAuthStateChanged((response) => {\r\n  //     setUser(response);\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //     AuthConfirmation(user);   \r\n  // }, [user]);"]},"metadata":{},"sourceType":"module"}