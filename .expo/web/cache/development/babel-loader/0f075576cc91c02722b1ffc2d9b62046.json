{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcelo\\\\Documents\\\\JornadasApp\\\\JornadasApp\\\\src\\\\MyStackScreen\\\\SplashScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Animatable from \"react-native-animatable\";\nexport default function SplashScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      click = _useState2[0],\n      setClick = _useState2[1];\n\n  var goToScreen = function goToScreen(routeName) {\n    props.navigation.navigate(routeName);\n  };\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      goToScreen(\"Principal\");\n    }, !click ? 5000 : 1);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [!click]);\n  return React.createElement(View, {\n    style: styles.splashScreen,\n    onTouchStart: function onTouchStart() {\n      return setClick(!click);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"rgba(0,0,0,0.2)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Animatable.Image, {\n    animation: \"pulse\",\n    easing: \"ease-in-expo\",\n    iterationCount: \"infinite\",\n    style: {\n      width: 300,\n      height: 100,\n      marginTop: 300\n    },\n    source: require(\"../../assets/logo_jornadas.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.containerStatus, styles.horizontal],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#F5C300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.smartApps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"\\xA92020 Powered by Smartapps\"));\n}\n;\nvar styles = StyleSheet.create({\n  splashScreen: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#03255F\"\n  },\n  smartApps: {\n    fontSize: 12,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: 75,\n    textAlign: 'center'\n  },\n  containerStatus: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Marcelo/Documents/JornadasApp/JornadasApp/src/MyStackScreen/SplashScreen.js"],"names":["React","useState","useEffect","Animatable","SplashScreen","props","click","setClick","goToScreen","routeName","navigation","navigate","timer","setTimeout","clearTimeout","styles","splashScreen","width","height","marginTop","require","containerStatus","horizontal","smartApps","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","backgroundColor","fontSize","color","fontWeight","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StatusBar, ActivityIndicator, Text, StyleSheet } from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\n\r\nexport default function SplashScreen(props){\r\n  const [click, setClick] = useState(false);\r\n\r\n  const goToScreen = (routeName) => {\r\n    props.navigation.navigate(routeName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(\r\n      () => {\r\n        goToScreen(\"Principal\");\r\n      },\r\n      !click ? 5000 : 1\r\n    );\r\n    return () => clearTimeout(timer);\r\n  }, [!click]);\r\n\r\n  return (\r\n    <View style={styles.splashScreen} onTouchStart={() => setClick(!click)}>\r\n      <StatusBar translucent backgroundColor=\"rgba(0,0,0,0.2)\" />\r\n      <Animatable.Image\r\n        animation=\"pulse\"\r\n        easing=\"ease-in-expo\"\r\n        iterationCount=\"infinite\"\r\n        style={{ width: 300, height: 100, marginTop:300 }}\r\n        source={require(\"../../assets/logo_jornadas.png\")}\r\n      />\r\n      <View style={[styles.containerStatus, styles.horizontal]}>\r\n        <ActivityIndicator size=\"large\" color=\"#F5C300\" />\r\n      </View>\r\n      <Text style={styles.smartApps}>Â©2020 Powered by Smartapps</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  splashScreen: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#03255F\",\r\n  },\r\n  smartApps: {\r\n    fontSize: 12,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 75,\r\n   textAlign: 'center',\r\n  },\r\n  containerStatus: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  horizontal: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n  },\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}