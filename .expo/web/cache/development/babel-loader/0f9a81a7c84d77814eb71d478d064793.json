{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jahma\\\\OneDrive\\\\Documents\\\\GitHub\\\\Jornadas2020B\\\\src\\\\components\\\\Auth\\\\LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { validateEmail } from \"./validation\";\n\nvar LoginForm = function LoginForm(props) {\n  var changeForm = props.changeForm;\n\n  var _useState = useState(defaultValue()),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formError = _useState4[0],\n      setFormError = _useState4[1];\n\n  var login = function login() {\n    var errors = {};\n\n    if (!formData.email || !formData.password) {\n      if (!formData.email) errors.email = true;\n      if (!formData.password) errors.password = true;\n      console.log('ERROR 1');\n    } else if (!validateEmail(formData.email)) {\n      errors.email = true;\n      console.log('ERROR 2');\n    } else {\n      firebase.auth().signInWithEmailAndPassword(formData.email, formData.password).then(function () {\n        console.log('OK');\n      }).catch(function () {\n        setFormError({\n          email: true,\n          password: true\n        });\n      });\n    }\n\n    setFormError(errors);\n  };\n\n  var _onChange = function onChange(e, type) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, type, e.nativeEvent.text)));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n    style: [styles.input, formError.email && styles.error],\n    placeholder: \"Correo Electronico\",\n    placeholderTextColor: \"#969696\",\n    onChange: function onChange(e) {\n      return _onChange(e, 'email');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.input, formError.password && styles.error],\n    placeholder: \"Contrase\\xF1a\",\n    placeholderTextColor: \"#969696\",\n    secureTextEntry: true,\n    onChange: function onChange(e) {\n      return _onChange(e, 'password');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: login,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 69\n    }\n  }, \"Iniciar Sesi\\xF3n\")), React.createElement(View, {\n    style: styles.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: changeForm,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 78\n    }\n  }, \"Registrarse\"))));\n};\n\nexport default LoginForm;\n\nfunction defaultValue() {\n  return {\n    email: '',\n    password: ''\n  };\n}\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 50,\n    color: '#fff',\n    width: 300,\n    marginBottom: 25,\n    backgroundColor: '#1e3040',\n    paddingHorizontal: 20,\n    borderRadius: 50,\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: '#1e3040'\n  },\n  button: {\n    width: 300,\n    height: 50,\n    backgroundColor: '#F5C300',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    borderRadius: 8,\n    borderWidth: 1\n  },\n  register: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 10\n  },\n  text: {\n    fontSize: 15,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  error: {\n    borderColor: '#940c0c'\n  }\n});","map":{"version":3,"sources":["C:/Users/jahma/OneDrive/Documents/GitHub/Jornadas2020B/src/components/Auth/LoginForm.js"],"names":["React","useState","validateEmail","LoginForm","props","changeForm","defaultValue","formData","setFormData","formError","setFormError","login","errors","email","password","console","log","firebase","auth","signInWithEmailAndPassword","then","catch","onChange","e","type","nativeEvent","text","styles","input","error","button","register","StyleSheet","create","height","color","width","marginBottom","backgroundColor","paddingHorizontal","borderRadius","fontSize","borderWidth","borderColor","alignItems","justifyContent","marginTop","flex","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextInput, Text, StyleSheet, TouchableOpacity, View } from 'react-native';\r\nimport { validateEmail } from './validation';\r\n\r\nconst LoginForm = (props) => {\r\n    const { changeForm } = props;\r\n    const [formData, setFormData] = useState(defaultValue());\r\n    const [formError, setFormError] = useState({});\r\n\r\n    const login = () => {\r\n        let errors = {};\r\n        if (!formData.email || !formData.password) {\r\n            if (!formData.email) errors.email = true;\r\n            if (!formData.password) errors.password = true;\r\n            console.log('ERROR 1');\r\n        } else if (!validateEmail(formData.email)) {\r\n            errors.email = true;\r\n            console.log('ERROR 2');\r\n        } else {\r\n            firebase.auth()\r\n                .signInWithEmailAndPassword(formData.email, formData.password)\r\n                .then(() => {\r\n                    console.log('OK')\r\n                })\r\n                .catch(() => {\r\n                    setFormError({\r\n                        email: true,\r\n                        password: true,\r\n                    });\r\n                });\r\n        }\r\n        setFormError(errors);\r\n    }\r\n\r\n    const onChange = (e, type) => {\r\n        //console.log('data: ', e.nativeEvent.text);\r\n        //console.log('type: ', type);\r\n        setFormData({ ...formData, [type]: e.nativeEvent.text });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TextInput\r\n                style={[styles.input, formError.email && styles.error]}\r\n                placeholder=\"Correo Electronico\"\r\n                placeholderTextColor=\"#969696\"\r\n                onChange={(e) => onChange(e, 'email')}\r\n            />\r\n            <TextInput\r\n                style={[styles.input, formError.password && styles.error]}\r\n                placeholder=\"Contraseña\"\r\n                placeholderTextColor=\"#969696\"\r\n                secureTextEntry={true}\r\n                onChange={(e) => onChange(e, 'password')}\r\n            />\r\n            <TouchableOpacity onPress={login} style={styles.button}><Text style={styles.text}>Iniciar Sesión</Text></TouchableOpacity>\r\n            <View style={styles.register}>\r\n                <TouchableOpacity onPress={changeForm} style={styles.button}><Text style={styles.text}>Registrarse</Text></TouchableOpacity>\r\n            </View>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n\r\nfunction defaultValue() {\r\n    return {\r\n        email: '',\r\n        password: '',\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        height: 50,\r\n        color: '#fff',\r\n        width: 300,\r\n        marginBottom: 25,\r\n        backgroundColor: '#1e3040',\r\n        paddingHorizontal: 20,\r\n        borderRadius: 50,\r\n        fontSize: 18,\r\n        borderWidth: 1,\r\n        borderColor: '#1e3040',\r\n    },\r\n    button: {\r\n        width: 300,\r\n        height: 50,\r\n        backgroundColor: '#F5C300',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 8,\r\n        borderWidth: 1,\r\n    },\r\n    register: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        marginBottom: 10,\r\n    },\r\n    text: {\r\n        fontSize: 15,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    error: {\r\n        borderColor: '#940c0c',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}