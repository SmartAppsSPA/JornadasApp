{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcelo\\\\Documents\\\\GitHub\\\\JornadasApp\\\\src\\\\Screens\\\\Dashboard\\\\MisTalonarios\\\\Talonarios.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport usePreference from \"../../../Hooks/usePreferences\";\nimport firebase from \"../../../../Firebase/Firebase\";\nimport Header from \"../../../components/Layouts/Header\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nexport default function Alcancias() {\n  var navigation = useNavigation();\n\n  var _usePreference = usePreference(),\n      userFbData = _usePreference.userFbData;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      talonarios = _useState2[0],\n      setTalonarios = _useState2[1];\n\n  var talonariosToArray = [];\n  useEffect(function () {\n    firebase.database().ref(\"Users/\" + userFbData.uid + \"/talonarios\").on(\"value\", function (snapshot) {\n      setTalonarios(snapshot.val());\n    });\n  }, []);\n\n  if (talonarios && userFbData) {\n    Object.keys(talonarios).forEach(function (key, i) {\n      talonariosToArray[i] = talonarios[key];\n    });\n    console.log(talonariosToArray);\n    return React.createElement(View, {\n      style: styles.mainView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.box1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }), React.createElement(View, {\n      style: styles.box2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }), React.createElement(Header, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(SafeAreaView, {\n      style: styles.mainView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.infoTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Mis talonarios\"), React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        color: \"#03255F\",\n        fontSize: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"No tiene Talonarios asignados.\"))));\n  }\n}\nvar styles = StyleSheet.create({\n  box1: {\n    flex: 1\n  },\n  box2: {\n    flex: 2\n  },\n  infoTitle: {\n    marginVertical: 10,\n    marginHorizontal: 10,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    fontSize: 20,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#34495E\",\n    height: 30,\n    borderRadius: 15,\n    overflow: \"hidden\"\n  },\n  infoView: {\n    paddingVertical: 10,\n    marginVertical: 10,\n    marginHorizontal: 26,\n    backgroundColor: \"#fff\",\n    borderWidth: 0.05,\n    borderRadius: 5\n  },\n  textBox: {\n    flexDirection: \"row\"\n  },\n  textKey: {\n    flex: 1,\n    marginLeft: 3,\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"#03255f\"\n  },\n  textValue: {\n    fontSize: 15,\n    fontWeight: \"700\",\n    color: \"#696969\",\n    marginRight: 70\n  },\n  backButton: {\n    flexDirection: \"row\",\n    width: 55,\n    height: 55,\n    alignSelf: \"flex-end\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    marginTop: 15,\n    marginLeft: 20,\n    position: \"absolute\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Marcelo/Documents/GitHub/JornadasApp/src/Screens/Dashboard/MisTalonarios/Talonarios.js"],"names":["React","useState","useEffect","usePreference","firebase","Header","useNavigation","Icon","Alcancias","navigation","userFbData","talonarios","setTalonarios","talonariosToArray","database","ref","uid","on","snapshot","val","Object","keys","forEach","key","i","console","log","styles","mainView","box1","box2","flex","infoTitle","alignItems","marginTop","fontWeight","color","fontSize","StyleSheet","create","marginVertical","marginHorizontal","textAlign","justifyContent","backgroundColor","height","borderRadius","overflow","infoView","paddingVertical","borderWidth","textBox","flexDirection","textKey","marginLeft","textValue","marginRight","backButton","width","alignSelf","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView\r\n} from \"react-native\";\r\nimport usePreference from \"../../../Hooks/usePreferences\";\r\nimport firebase from \"../../../../Firebase/Firebase\";\r\nimport Header from \"../../../components/Layouts/Header\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\n\r\nexport default function Alcancias() {\r\n  const navigation = useNavigation();\r\n  const { userFbData } = usePreference();\r\n  const [talonarios, setTalonarios] = useState([]);\r\n  let talonariosToArray = [];\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(`Users/${userFbData.uid}/talonarios`)\r\n      .on(\"value\", (snapshot) => {\r\n        setTalonarios(snapshot.val());\r\n      });\r\n  }, []);\r\n\r\n  if (talonarios && userFbData) {\r\n    Object.keys(talonarios).forEach((key, i) => {\r\n      talonariosToArray[i] = talonarios[key];\r\n    });\r\n    console.log(talonariosToArray);\r\n    return (\r\n      <View style={styles.mainView}>\r\n\t\t  <View style={styles.box1}>\r\n\r\n\t\t  </View>\r\n\t\t  <View style={styles.box2}>\r\n\r\n\t\t  </View>\r\n        <Header style={{flex: 1}} />\r\n        {/* <Text style={styles.infoTitle}>Mis talonarios</Text>\r\n        <ScrollView>\r\n          {talonariosToArray.map((talonario, i) => {\r\n            return (\r\n              <View key={i} style={styles.infoView}>\r\n                <View style={styles.textBox}>\r\n                  <Text style={styles.textKey}>Numero De talonario:</Text>\r\n                  <Text style={styles.textValue}>\r\n                    {talonario.talonario_numero}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.textBox}>\r\n                  <Text style={styles.textKey}>Correlativo:</Text>\r\n                  <Text style={styles.textValue}>{talonario.correlativo}</Text>\r\n                </View>\r\n                {talonario.asignado_tercero === true ||\r\n                talonario.asignado_externo === true ? (\r\n                  <View style={styles.textBox}>\r\n                    <Text style={styles.textKey}>Retirado: </Text>\r\n                    {talonario.recuperado === true ? (\r\n                      <Text style={[styles.textValue, { color: \"green\" }]}>\r\n                        Si\r\n                      </Text>\r\n                    ) : (\r\n                      <Text style={[styles.textValue, { color: \"red\" }]}>\r\n                        No\r\n                      </Text>\r\n                    )}\r\n                    <Text style={styles.textKey}>Entregado: </Text>\r\n                    <Text style={[styles.textValue, { color: \"green\" }]}>\r\n                      si\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <View style={styles.textBox}>\r\n                    <Text style={styles.textKey}>Entregado: </Text>\r\n                    <Text style={[styles.textValue, { color: \"red\" }]}>No</Text>\r\n                  </View>\r\n                )}\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    navigation.navigate(\"InformacionTalonario\", {\r\n                      content: talonario,\r\n                      uid: userFbData.uid,\r\n                      key: i,\r\n                      subtipo: userFbData.subtipo,\r\n                    })\r\n                  }\r\n                  key={i}\r\n                  style={styles.backButton}\r\n                >\r\n                  {talonario.asignado_tercero === true ||\r\n                  talonario.asignado_externo === true ? (\r\n                    <Icon\r\n                      type=\"FontAwesome5\"\r\n                      name={\r\n                        talonario.recuperado === true ? \"check-circle\" : \"user\"\r\n                      }\r\n                      size={50}\r\n                      color={\r\n                        talonario.recuperado === true ? \"green\" : \"#34495E\"\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <Icon\r\n                      type=\"FontAwesome5\"\r\n                      name=\"question-circle\"\r\n                      size={50}\r\n                      color=\"red\"\r\n                    />\r\n                  )}\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })}\r\n        </ScrollView> */}\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <SafeAreaView style={styles.mainView}>\r\n        <Header />\r\n        <Text style={styles.infoTitle}>Mis talonarios</Text>\r\n        <ScrollView>\r\n          <View style={{ alignItems: \"center\", marginTop: 30 }}>\r\n            <Text\r\n              style={{ fontWeight: \"bold\", color: \"#03255F\", fontSize: 15 }}\r\n            >\r\n              No tiene Talonarios asignados.\r\n            </Text>\r\n          </View>\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tbox1:{\r\n\t\tflex: 1,\r\n\t},\r\n\tbox2:{\r\n\t\tflex:2,\r\n\t},\r\n  infoTitle: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#34495E\",\r\n    height: 30,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n  },\r\n  infoView: {\r\n    paddingVertical: 10,\r\n    marginVertical: 10,\r\n    marginHorizontal: 26,\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 0.05,\r\n    borderRadius: 5,\r\n  },\r\n  textBox: { flexDirection: \"row\" },\r\n  textKey: {\r\n    flex: 1,\r\n    marginLeft: 3,\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    color: \"#03255f\",\r\n  },\r\n  textValue: {\r\n    fontSize: 15,\r\n    fontWeight: \"700\",\r\n    color: \"#696969\",\r\n    marginRight: 70,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    width: 55,\r\n    height: 55,\r\n    alignSelf: \"flex-end\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n    marginTop: 15,\r\n    marginLeft: 20,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}