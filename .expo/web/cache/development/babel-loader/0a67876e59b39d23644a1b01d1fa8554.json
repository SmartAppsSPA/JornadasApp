{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/marceloimac/Documents/GitHub/JornadasApp/src/Screens/Bingo/BingoCompany.js\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport HeaderView from \"../../components/Layouts/Header\";\nimport MainImage from \"../../components/Layouts/MainImage\";\nimport { numberFormat } from \"../../Sources/PagoEnLinea/FormatPrice\";\nimport usePreference from \"../../Hooks/usePreferences\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { validateEmail } from \"../../Utils/validation\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function BingoCompany(props) {\n  var navigation = useNavigation();\n\n  var _usePreference = usePreference(),\n      userFbData = _usePreference.userFbData;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      formError = _useState2[0],\n      setFormError = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cantidad = _useState4[0],\n      setCantidad = _useState4[1];\n\n  var _useState5 = useState(userFbData.nombre),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nombre = _useState6[0],\n      setNombre = _useState6[1];\n\n  var _useState7 = useState(userFbData.apellido),\n      _useState8 = _slicedToArray(_useState7, 2),\n      apellido = _useState8[0],\n      setApellido = _useState8[1];\n\n  var _useState9 = useState(userFbData.email),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(userFbData.telefono),\n      _useState12 = _slicedToArray(_useState11, 2),\n      telefono = _useState12[0],\n      setTelefono = _useState12[1];\n\n  var precio = 500;\n  var precioTotal = precio * cantidad;\n\n  var handleCantidad = function handleCantidad(cantidad, max) {\n    if (cantidad >= 1) {\n      setCantidad(cantidad);\n    } else if (cantidad < 0) {\n      cantidad = 1;\n      setCantidad(cantidad);\n    } else if (cantidad >= max) {\n      cantidad = max;\n      setCantidad(cantidad);\n    }\n  };\n\n  var comprar = function comprar() {\n    var errors = {};\n\n    if (!nombre || !apellido || !telefono || !email) {\n      if (!nombre) errors.nombre = true;\n      if (!apellido) errors.apellido = true;\n      if (telefono) errors.telefono = true;\n      if (!validateEmail(email)) errors.email = true;\n    } else {\n      alert(\"compra de \" + cantidad + \" bonos por \" + numberFormat(precioTotal) + \" \");\n      handleReset();\n    }\n\n    setFormError(errors);\n  };\n\n  var handleReset = function handleReset() {\n    setCantidad(1);\n    setNombre(userFbData.nombre);\n    setApellido(userFbData.apellido);\n    setEmail(userFbData.email);\n    setTelefono(userFbData.telefono);\n  };\n\n  if (userFbData) {\n    return React.createElement(SafeAreaView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, React.createElement(HeaderView, {\n      props: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }), React.createElement(Image, {\n      source: {\n        uri: \"gs://jornadas2020.appspot.com/Sources/telebingo-01.jpg\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/marceloimac/Documents/GitHub/JornadasApp/src/Screens/Bingo/BingoCompany.js"],"names":["React","useState","requireNativeComponent","HeaderView","MainImage","numberFormat","usePreference","ScrollView","TouchableOpacity","validateEmail","useNavigation","BingoCompany","props","navigation","userFbData","formError","setFormError","cantidad","setCantidad","nombre","setNombre","apellido","setApellido","email","setEmail","telefono","setTelefono","precio","precioTotal","handleCantidad","max","comprar","errors","alert","handleReset","uri"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SafeAreaView, View, Text, TextInput, Image, requireNativeComponent} from \"react-native\";\nimport HeaderView from \"../../components/Layouts/Header\";\nimport MainImage from \"../../components/Layouts/MainImage\";\nimport { numberFormat } from \"../../Sources/PagoEnLinea/FormatPrice\";\nimport usePreference from \"../../Hooks/usePreferences\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { validateEmail} from \"../../Utils/validation\";\nimport {useNavigation} from  '@react-navigation/native';\n\nexport default function BingoCompany(props){\n\tconst navigation = useNavigation();\n\tconst { userFbData } = usePreference();\n\tconst [formError, setFormError] = useState({});\n\tconst [cantidad, setCantidad] = useState(1);\n\tconst [nombre, setNombre] = useState(userFbData.nombre);\n\tconst [apellido, setApellido] = useState(userFbData.apellido);\n\tconst [email, setEmail] = useState(userFbData.email);\n\tconst [telefono, setTelefono] = useState(userFbData.telefono);\n\tconst precio = 500;\n\tconst precioTotal = precio * cantidad;\n\n\tconst handleCantidad = (cantidad, max) => {\n\t\tif (cantidad >= 1) {\n\t\t\tsetCantidad(cantidad);\n\t\t} else if (cantidad < 0) {\n\t\t\tcantidad = 1;\n\t\t\tsetCantidad(cantidad);\n\t\t} else if (cantidad >= max) {\n\t\t\tcantidad = max;\n\t\t\tsetCantidad(cantidad);\n\t\t}\n\t};\n\n\tconst comprar = () => {\n\t\tlet errors = {};\n\t\tif (!nombre || !apellido || !telefono || !email) {\n\t\t\tif (!nombre) errors.nombre = true;\n\t\t\tif (!apellido) errors.apellido = true;\n\t\t\tif (telefono) errors.telefono = true;\n\t\t\tif (!validateEmail(email)) errors.email = true;\n\t\t} else {\n\t\t\talert(`compra de ${cantidad} bonos por ${numberFormat(precioTotal)} `);\n\t\t\thandleReset();\n\t\t}\n\t\tsetFormError(errors);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetCantidad(1);\n\t\tsetNombre(userFbData.nombre);\n\t\tsetApellido(userFbData.apellido);\n\t\tsetEmail(userFbData.email);\n\t\tsetTelefono(userFbData.telefono);\n\t};\n\n\tif (userFbData) {\n\t\t\n\t\treturn (\n\t\t\t<SafeAreaView >\n\t\t\t\t<HeaderView props={props} />\n\t\t\t\t<Image source={{uri: \"gs://jornadas2020.appspot.com/Sources/telebingo-01.jpg\" }} />\n\t\t\t\t{/* <ScrollView>\n\t\t\t\t\t<MainImage />\n\t\t\t\t\t<View style={styles.textBoxBono}>\n\t\t\t\t\t\t<Text style={styles.titles}>Bingo</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.form}>\n\t\t\t\t\t\t<Text style={styles.form}>Nombre(s)</Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tname=\"nombre\"\n\t\t\t\t\t\t\tstyle={[styles.input, formError.nombre && styles.error]}\n\t\t\t\t\t\t\ttextContentType=\"username\"\n\t\t\t\t\t\t\tplaceholder=\"Ingrese nombre...\"\n\t\t\t\t\t\t\tdefaultValue={nombre}\n\t\t\t\t\t\t\tonChange={(e) => setNombre(e.nativeEvent.text)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={styles.form}>apellido(s)</Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tname=\"apellido\"\n\t\t\t\t\t\t\tstyle={[styles.input, formError.apellido && styles.error]}\n\t\t\t\t\t\t\ttextContentType=\"middleName\"\n\t\t\t\t\t\t\tplaceholder=\"Ingrese apellido...\"\n\t\t\t\t\t\t\tdefaultValue={apellido}\n\t\t\t\t\t\t\tonChange={(e) => setApellido(e.nativeEvent.text)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={styles.form}>Email</Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttextContentType=\"emailAddress\"\n\t\t\t\t\t\t\tstyle={[styles.input, formError.email && styles.error]}\n\t\t\t\t\t\t\tplaceholder=\"Ingrese email de contacto...\"\n\t\t\t\t\t\t\tdefaultValue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.nativeEvent.text)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={styles.form}>Telefono</Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tname=\"telefono\"\n\t\t\t\t\t\t\ttextContentType=\"telephoneNumber\"\n\t\t\t\t\t\t\tstyle={[styles.input, formError.telefono && styles.error]}\n\t\t\t\t\t\t\tplaceholder=\"+56 9 ...\"\n\t\t\t\t\t\t\tdefaultValue={telefono}\n\t\t\t\t\t\t\tkeyboardType=\"phone-pad\"\n\t\t\t\t\t\t\tkeyboardAppearance=\"dark\"\n\t\t\t\t\t\t\tonChange={(e) => setTelefono(e.nativeEvent.text)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.textBoxCantidad}>\n\t\t\t\t\t\t<Text style={styles.cantidadText}>Cantidad</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.quantity}>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => handleCantidad(cantidad - 1)}\n\t\t\t\t\t\t\tstyle={styles.buttonLess}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.signo}>-</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<Text style={styles.numero}>{cantidad}</Text>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => handleCantidad(cantidad + 1)}\n\t\t\t\t\t\t\tstyle={styles.buttonPlus}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.signo}>+</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.reset}>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => handleReset(cantidad)}\n\t\t\t\t\t\t\tstyle={styles.buttonReset}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.textReset}>Borrar</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.buttons}>\n\t\t\t\t\t\t<TouchableOpacity onPress={comprar} style={styles.buttonPagar}>\n\t\t\t\t\t\t\t<Text style={styles.bonoSubmit}>\n\t\t\t\t\t\t\t\t{numberFormat(precioTotal)} Comprar\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => navigation.navigate(\"Home\")}\n\t\t\t\t\t\t\tstyle={styles.buttonPagar}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.bonoSubmit}>Volver</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView> */}\n\t\t\t</SafeAreaView>\n\t\t);\n\t}\n};\n\n"]},"metadata":{},"sourceType":"module"}